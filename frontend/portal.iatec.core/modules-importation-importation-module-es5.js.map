{"version":3,"sources":["src/app/modules/importation/central-upload/central-upload.component.html","src/app/modules/importation/central-upload/central-upload.component.scss","src/app/modules/importation/central-upload/central-upload.component.ts","src/app/modules/importation/importation-routes.guard.ts","src/app/modules/importation/importation-routing.module.ts","src/app/modules/importation/importation.module.ts","src/app/modules/importation/services/importation.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<app-loader [visibility]=\\\"loading\\\"></app-loader>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n\\t<div class=\\\"row mt-3\\\">\\r\\n\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t<nav aria-label=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t<ol class=\\\"breadcrumb\\\">\\r\\n\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item material-icons\\\" aria-current=\\\"page\\\">cloud_upload</li>\\r\\n\\t\\t\\t\\t\\t<li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Central de Upload</li>\\r\\n\\t\\t\\t\\t</ol>\\r\\n\\t\\t\\t</nav>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<section>\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t\\t<h1>Central de Upload</h1>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"jumbotron\\\">\\r\\n\\t\\t\\t<form [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group file-ajust-material\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input #myInput type=\\\"file\\\" (change)=\\\"onFileChanged($event.target.files)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\taccept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-label>Tipo de Documento</mat-label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-select formControlName=\\\"tipoUpload\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let tipo of tipos\\\" [value]=\\\"tipo.id\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ tipo.nome }}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-error>Campo Obrigatório</mat-error>\\r\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-lg-2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-block btn-primary adjustPosition\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"!isUploadFiles || !form.valid\\\" (click)=\\\"submit()\\\">Importar</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\t</section>\\r\\n\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-lg-12\\\">\\r\\n\\t\\t\\t<h1>Lista de Arquivos Importados</h1>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"row mr-1\\\">\\r\\n\\t\\t<div class=\\\"col-lg-7\\\">\\r\\n\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t<mat-label>Nome do Arquivo</mat-label>\\r\\n\\t\\t\\t\\t<input [(ngModel)]=\\\"filterFileName\\\" matInput placeholder=\\\"Nome do Arquivo\\\" />\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t</div>\\t\\t\\r\\n\\t\\t<div class=\\\"col-lg-4\\\">\\r\\n\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t<mat-label>Tipo de Documento</mat-label>\\r\\n\\t\\t\\t\\t<mat-select [(value)]=\\\"filterType\\\" >\\r\\n\\t\\t\\t\\t\\t<mat-option [value]=\\\"\\\"> Todos </mat-option>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let tipo of tipos\\\" [value]=\\\"tipo.id\\\">\\r\\n\\t\\t\\t\\t\\t\\t{{ tipo.nome }}\\r\\n\\t\\t\\t\\t\\t</mat-option>\\r\\n\\t\\t\\t\\t</mat-select>\\r\\n\\t\\t\\t\\t<mat-error>Campo Obrigatório</mat-error>\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t</div>\\t\\t\\r\\n\\t\\t<div class=\\\"col-lg-1\\\">\\r\\n\\t\\t\\t<button (click)=\\\"find(true)\\\" class=\\\"btn btn-primary\\\">\\r\\n\\t\\t\\t\\tAtualizar\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"col-lg-12\\\" *ngIf=\\\"!length || length == 0\\\">\\r\\n\\t\\t<label>Não há arquivos importados</label>\\r\\n\\t</div>\\r\\n\\r\\n\\r\\n\\t<div class=\\\"row mt-3 mb-3\\\">\\r\\n\\t\\t<div class=\\\"col-lg-12\\\" *ngIf=\\\"length > 0\\\">\\r\\n\\t\\t\\t<div class=\\\"mat-elevation-z8\\\">\\r\\n\\t\\t\\t\\t<table mat-table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"CriadoPor\\\">\\r\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef class=\\\"first-column text-left\\\">Solicitado Por</th>\\r\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\" class=\\\"first-column text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{ element.solicitante.nomeCompleto }}</td>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"DataCadastro\\\">\\r\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef class=\\\"text-left\\\">Data Solicitação</th>\\r\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{ element.dataSolicitacao | date: 'dd/MM/yyyy HH:mm' }}</td>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"Arquivo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef class=\\\"text-left\\\">Arquivo</th>\\r\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{ element.arquivos.fileName.substring(33) }}</td>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"Tipo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef class=\\\"text-left\\\">Tipo</th>\\r\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-left\\\">{{ element.tipo }}</td>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"Status\\\">\\r\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef class=\\\"text-left\\\">Status</th>\\r\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-left\\\">{{ element.status }}</td>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"Mensagem\\\">\\r\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef class=\\\"text-left\\\">Mensagem</th>\\r\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-left\\\">{{ element.mensagem }}</td>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"Actions\\\">\\r\\n\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\">Link</th>\\r\\n\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\" class=\\\"icones text-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button (click)=\\\"getDownload(element.arquivos)\\\" mat-menu-item\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"d-flex align-items-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"material-icons mr-1\\\">attach_file</i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tDownload\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t<tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n\\t\\t\\t\\t\\t<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\r\\n\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'completed' : row.pendings === 0 }\\\"></tr>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t<mat-paginator [pageSizeOptions]=\\\"pageSizeOptions\\\" [length]=\\\"length\\\" [pageIndex]=\\\"pageIndex\\\"\\r\\n\\t\\t\\t\\t\\t[pageSize]=\\\"pageSize\\\" (page)=\\\"setPageSizeOptions($event)\\\"></mat-paginator>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaW1wb3J0YXRpb24vY2VudHJhbC11cGxvYWQvY2VudHJhbC11cGxvYWQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { ImportationService } from '../services/importation.service';\r\nimport { SnackbarComponent } from 'src/app/shared/components/snackbar/snackbar.component';\r\nimport { MatSnackBar, MatTableDataSource, MatPaginator, PageEvent } from '@angular/material';\r\nimport { MediaUpload } from 'src/app/models/media-upload.interface';\r\nimport { Atividade } from 'src/app/models/atividade.interface';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ICentralUpload, FileCentralDownload, ITipoUpload } from 'src/app/models/central-upload.interface';\r\n\r\n@Component({\r\n\tselector: 'central-upload',\r\n\ttemplateUrl: './central-upload.component.html',\r\n\tstyleUrls: ['./central-upload.component.scss']\r\n})\r\n\r\nexport class CentralUploadComponent implements OnInit {\r\n\r\n\t@ViewChild('myInput', { static: false }) myInput: ElementRef;\r\n\t@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\tpublic filterType: string = '';\r\n\tpublic filterFileName: string = '';\r\n\tpublic tipos: ITipoUpload[] = [];\r\n\tpublic file: Set<File> = new Set()\r\n\tpublic loading: boolean = false;\r\n\tpublic isUploadFiles: boolean = false;\r\n\tpublic anexos: MediaUpload[] = [];\r\n\tpublic dataSource = new MatTableDataSource<ICentralUpload>([]);\r\n\tpublic loader: Boolean;\r\n\tpublic formData: FormData = new FormData();\r\n\tpublic form: FormGroup;\r\n\tpublic length: number;\r\n\tpublic pageSize = 5;\r\n\tpublic pageIndex = 0;\r\n\tpublic pageSizeOptions: number[] = [5, 10, 25, 50, 100];\r\n\tpublic displayedColumns: string[] = ['CriadoPor', 'DataCadastro', 'Tipo', 'Arquivo', 'Status', 'Mensagem', 'Actions'];\r\n\r\n\tconstructor(\r\n\t\tprivate importationService: ImportationService,\r\n\t\tprivate matSnackBar: MatSnackBar,\r\n\t\tprivate formBuilder: FormBuilder\r\n\t) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.form = this.formBuilder.group({\r\n\t\t\ttipoUpload: ['', [Validators.required]]\r\n\t\t});\r\n\t\tthis.getTypes();\r\n\t\tthis.find();\r\n\t}\r\n\r\n\tpublic submit() {\r\n\t\ttry {\r\n\t\t\tthis.loading = true;\r\n\t\t\tlet fileToUpload = this.formData.get(\"file\");\r\n\t\t\tconst formData: FormData = new FormData();\r\n\t\t\tformData.append('file', fileToUpload);\r\n\t\t\tformData.append(\"tipoUpload\", this.form.value.tipoUpload.toString());\r\n\t\t\tthis.importationService.sendUpload(formData).subscribe(\r\n\t\t\t\t() => {\r\n\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t\tSnackbarComponent.showSuccess(this.matSnackBar, \"Upload iniciado, acompanhe seu progresso na tabela abaixo.\");\r\n\t\t\t\t\tthis.find();\r\n\t\t\t\t\tthis.myInput.nativeElement.value = \"\";\r\n\t\t\t\t\tthis.isUploadFiles = false;\r\n\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t\tSnackbarComponent.showError(this.matSnackBar, null, \"Erro no upload do arquivo\");\r\n\t\t\t\t\tthis.myInput.nativeElement.value = \"\";\r\n\t\t\t\t\tthis.isUploadFiles = false;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t\tcatch\r\n\t\t{\r\n\t\t\tthis.loading = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getTypes(): void {\r\n\t\tthis.importationService.getTypes().subscribe(\r\n\t\t\tresponse => {\r\n\t\t\t\tthis.tipos = [...response.data];\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\t// Mensagem de Erro para Serviço Indisponível. Não tem como prosseguir\r\n\t\t\t}\r\n\t\t);\r\n\t}\t\r\n\r\n\tpublic find(reset: boolean = false): void {\r\n\t\tthis.loading = true;\r\n\r\n\t\tif (reset){\r\n\t\t\tthis.pageIndex = 0;\r\n\t\t\tthis.pageSize = 5;\r\n\t\t}\r\n\r\n\t\tconst pageIndex = (this.pageIndex + 1).toString();\r\n\t\tconst pageSize = this.pageSize.toString();\r\n\t\tthis.importationService.findUpload(pageIndex, pageSize, this.filterFileName, '', this.filterType, '', '').subscribe(\r\n\t\t\tresponse => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t\tthis.dataSource = new MatTableDataSource<ICentralUpload>(response.data);\r\n\t\t\t\tthis.length = response.length;\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tSnackbarComponent.showError(this.matSnackBar, error);\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic getDownload(file: FileCentralDownload): void {\r\n\t\tthis.importationService.getFile(file.url).subscribe(\r\n\t\t\tresponse => {\r\n\t\t\t\tconst blob = new Blob([response.body], { type: 'application/octet-stream' });\r\n\t\t\t\tconst linkArquivo = window.URL.createObjectURL(blob);\r\n\t\t\t\tconst fileName = response.headers.get('content-disposition').split(';')[1].split('filename')[1].split('=')[1].trim();\r\n\t\t\t\tvar link = document.createElement(\"a\");\r\n\t\t\t\tlink.setAttribute(\"href\", linkArquivo.toString());\r\n\t\t\t\tlink.setAttribute(\"download\", fileName);\r\n\t\t\t\tlink.style.display = \"none\";\r\n\t\t\t\tdocument.body.appendChild(link);\r\n\t\t\t\tlink.click();\r\n\t\t\t\tdocument.body.removeChild(link);\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tpublic setPageSizeOptions(eventOptions: PageEvent) {\r\n\t\tthis.pageIndex = eventOptions.pageIndex;\r\n\t\tthis.pageSize = eventOptions.pageSize;\r\n\t\tthis.find();\r\n\t}\r\n\r\n\tpublic onFileChanged(files: FileList) {\r\n\t\tthis.formData = new FormData();\r\n\t\tif (files && files.length > 0) {\r\n\t\t\ttry {\r\n\t\t\t\tfor (let i = 0; i < files.length; i++) {\r\n\t\t\t\t\tconst fileToUpload: File = files.item(i);\r\n\t\t\t\t\tthis.formData.append('file', fileToUpload, fileToUpload.name);\r\n\t\t\t\t}\r\n\t\t\t\tthis.isUploadFiles = true;\r\n\t\t\t}\r\n\t\t\tcatch\r\n\t\t\t{\r\n\t\t\t\tthis.isUploadFiles = false;\r\n\t\t\t\tthis.formData = new FormData();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AutenticationService } from '../../services/autentication.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class ImportationRoutesGuard implements CanActivate {\r\n\t\r\n\tconstructor(\r\n\t\tprivate authenticationService: AutenticationService\r\n\t) { }\r\n\t\r\n\tcanActivate(event: ActivatedRouteSnapshot) {\r\n\t\treturn this.authenticationService.isPermitted(\"importacao\", event.url[0].path);\r\n\t}\r\n\t\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CentralUploadComponent } from './central-upload/central-upload.component';\r\nimport { ImportationRoutesGuard } from './importation-routes.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n\t{ path: 'central-upload', component: CentralUploadComponent, canActivate: [ImportationRoutesGuard] },\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class ImportationRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ImportationRoutingModule } from './importation-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { MatFormFieldModule, MatInputModule, MatSelectModule, MatDatepickerModule, MatNativeDateModule, DateAdapter, MAT_DATE_FORMATS, MatRadioModule, MatProgressSpinnerModule, MatProgressBarModule, MatTableModule, MatPaginatorModule, MatCheckboxModule, MatDividerModule, MatCardModule, MatMenuModule } from '@angular/material';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { CustomDateAdapter } from 'src/app/shared/dateAdapter/customDate.adapter';\r\nimport { MY_DATE_FORMATS } from 'src/app/shared/dateAdapter/my-date-formats.const';\r\nimport { CentralUploadComponent } from './central-upload/central-upload.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tCentralUploadComponent\r\n\t],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tSharedModule,\r\n\t\tMatMenuModule,\r\n\t\tMatCardModule,\r\n\t\tMatCheckboxModule,\r\n\t\tMatDatepickerModule,\r\n\t\tMatNativeDateModule,\r\n\t\tMatDividerModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatInputModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tMatProgressBarModule,\r\n\t\tMatRadioModule,\r\n\t\tMatSelectModule,\r\n\t\tMatPaginatorModule,\r\n\t\tMatTableModule,\r\n\t\tMatProgressSpinnerModule,\r\n\t\tMatProgressBarModule,\r\n\t\tNgxMaskModule.forRoot(),\r\n\t\tReactiveFormsModule,\r\n\t\tImportationRoutingModule\r\n\t],\r\n\tproviders: [\r\n\t\t{ provide: DateAdapter, useClass: CustomDateAdapter },\r\n\t\t{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }\r\n\t],\r\n\tentryComponents: [\r\n\t]\r\n})\r\nexport class ImportationModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ExtractionMassified } from 'src/app/models/extraction-massified.model';\r\nimport { ResponseList } from 'src/app/models/response-list.interface';\r\nimport { MediaUpload } from 'src/app/models/media-upload.interface';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ImportationService {\r\n    \r\n    constructor(\r\n        private httpClient: HttpClient,\r\n    ) { }\r\n\r\n    public getFile(link: string): Observable<any> {\r\n        return this.httpClient.get<any>(link, {\r\n            responseType : 'blob' as 'json',\r\n            observe : 'response'\r\n        });\r\n    }    \r\n\r\n    public getTypes(): Observable<ResponseList> {\r\n        return this.httpClient.get<ResponseList>(`${environment.urlServices}/api/v1/central-uploads/tipos`, {})\r\n    }    \r\n        \r\n    public findUpload(pageIndex: string, \r\n                        pageSize: string, \r\n                        nomeArquivo?: string,\r\n                        statusId?: string,\r\n                        tipoId?: string,\r\n                        dataSolicitacaoInicial?: string,\r\n                        dataSolicitacaoFinal?: string\r\n                         ): Observable<ResponseList> {\r\n        return this.httpClient.get<ResponseList>(`${environment.urlServices}/api/v1/central-uploads`, {\r\n            params : {\r\n                PageSize: pageSize,\r\n                PageIndex: pageIndex,\r\n                NomeArquivo: nomeArquivo,\r\n                StatusId: statusId,\r\n                TipoId: tipoId,\r\n                DataSolicitacaoInicial: dataSolicitacaoInicial,\r\n                DataSolicitacaoFinal: dataSolicitacaoFinal\r\n            }\r\n        })\r\n    }\r\n\r\n    public sendUpload(file: any): Observable<any> {\r\n        return this.httpClient.post<Observable<any>>(`${environment.urlServices}/api/v1/central-uploads`, file)\r\n    }\r\n\t\t\t\r\n\r\n}"],"sourceRoot":"webpack:///","file":"modules-importation-importation-module-es5.js"}